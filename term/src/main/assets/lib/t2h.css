/** de.t2h/css/t2h.css - Default style sheet. */

/*
 * Copyright (C) 2014-2018 Thorbjørn Hansen.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* ============================================================
 * Basic settings
 * ============================================================ */

body {
  font-family: "Arial", sans-serif;
  line-height: 1.4;
}

/* ============================================================
 * Title and headings
 * ============================================================

/** Title */
p.title {
  font-size:   24pt;
  font-weight: bold;
  margin:      0.5em 0;
  text-align:  center;
}

h1, h2, h3, h4 {
  margin-top:     1em;
  margin-bottom:  1rem; /* The smaller `rem´. */
  border-bottom:  3pt solid #c0c0c0;
  padding-bottom: 3pt;
}

h5 {
  font-size: medium;  /* Same size as `p´. */
  margin-bottom: 1em;
}

/* ============================================================
 * Figures and images
 * ============================================================
 *
 * I use "figure" for everything that has a caption and disallows page
 * breaks, e.g. images, vector graphics, code, equations, ...). They
 * can be "floating" or "non-floating".
 *
 * Ordinary tables are *not* figures, since they allow page breaks.
 *
 * See also HTML5's `<figure>´ and `<figcaption>´, which seem to be
 * for floating figures.
 */
 
/** The class `figure´ produces a non-floating figure, one per line. */
*.figure {
  display: block; 

  margin-left:  1em;
  margin-right: 1em;
}  

/** The classes `figure stack´ produce a non-floating, stackable figure
 * (several per line).
 *
 * By default, the figures are vertically centered.
 */
*.figure.stack { 
  display: inline-block;

  vertical-align: middle;
}  

/* ------------------------------------------------------------
 * Figure content
 * ------------------------------------------------------------ */

/** Center images in figures. */
*.figure > img {
  /* Center image, see 
   *   (info "(web) Center an image") 
   */
  display:       block;
  margin-left:   auto;
  margin-right:  auto;
  /* End center images */
}

/** Center text in figures. 
 *
 * If you want captions with the default text style, a `<p>´ tag at
 * the top or bottom of the element with class `figure´ is enough.
 *
 * If the caption is too wide, set `max-width´ on the element with
 * class `figure´, e.g.
 *
 *  <div class="figure" style="max-width: 33%">
 *    <p>...</p>
 *  </div>
 */
*.figure > p {
  /* Center text. */
  text-align: center;
}

/** Center tables in figures. */
*.figure > table {
  /* Center table, see 
   *   (info "(web) Center a table") 
   */
  margin-left:   auto;
  margin-right:  auto;
  /* End center table */
}

/* ------------------------------------------------------------
 * Other figures and images
 * ------------------------------------------------------------ */

/** Standalone image of width 90%.
 *
 * A "standalone image" does not have a caption.
 *
 * I usually need a width of 90%.
 */
img.standalone90 {
  /* Center image, see 
   *   (info "(web) Center an image") 
   */
  display:       block;
  margin-left:   auto;
  margin-right:  auto;
  /* End center image */

  margin-top:    10pt;
  margin-bottom: 10pt;

  width:         90%;
}

/* ============================================================
 * Indentation
 * ============================================================ */

/** Indent.
 *
 * To indent a single paragraph once, use the class `indent´ on `p´:
 *
 *   <p>Not indentend</p>
 *   
 *   <p class="indent">Indented once.</p>
 *
 * To indent several paragraphs or several times, nest `div´s:
 *    
 *   <div class="indent">
 *     <p>Also indented once.</p>
 *       
 *     <div class="indent">
 *       <p>Indented twice.</p>
 *     </div>
 *   </div>
 */
*.indent {
  margin-left: 1em;
}

/* ============================================================
 * Lists
 * ============================================================ */

/* ------------------------------------------------------------
 * Bullet lists
 * ------------------------------------------------------------
 *
 * - Horizontal spacing
 *
 *   I do not want the bullet to be indented, only the text after the
 *   bullet.
 *
 *   That's a lot harder than it sounds, since each browser paints the
 *   bullet at a different location and a different size.
 *
 *   So we don't use the browser's bullet, but a Unicode character
 *   with `li::before´.
 *
 * - Vertical spacing
 *
 *   I want "wide lists" (lists with more vertical space between the
 *   items) as the default.
 *
 *   To get narrow lists, use `<ul class="narrow">´, see below.
 */
ul { 
  /* Horizontal spacing
   * ------------------------------ */
   
  /* IE indents its default `ul´ with `margin-left´, Firefox with
   * `padding-left, so reset both. */ 
  margin-left:  0em; 
  padding-left: 0em;
}
ul, ol {
  /* Vertical spacing 
   * ------------------------------ */
  
  margin-top:     1.0em;
  margin-bottom:  1.0em;
}

/** Default list items.
 *
 * - Horizontal spacing: see `ul´ above.
 * - Vertical spacing: see `ul´ above.
 */
ul > li {
  /* Horizontal spacing
   * ------------------------------ */

  /* We set the bullet with `li::before´ below. */
  list-style:   none;   

  /* Distance between container's left margin and list item's left
   * margin, ignoring bullet. */
  margin-left:  1em;  
}
ul > li, ol > li {
  /* Vertical spacing 
   * ------------------------------ */
  
  margin-top:    1em;  /* `1em´ is Firefox's spacing of `p´. */
  margin-bottom: 1em;  /* `1em´ is Firefox's spacing of `p´. */
}

/** Bullet for default list item. 
 */
ul > li::before {
  /* Candidates:
   *
   *   U+2013 ‘–’ ‘en dash’            - not really
   *   U+2022 ‘•’ ‘bullet’             - too small
   *   U+25CF ‘●’ ‘black circle’       - *huge* on Arn, see below
   *   U+25CB ‘○’ ‘white circle’       - *huge* on Arn, see below
   *   U+25AA ‘▪’ ‘black small square’ - a tolerable compromise, see below
   *   U+25AB ‘▫’ ‘white small square’ - ugly on Arn
   *
   * ‘▪’ is a bit too small on Windows and Ten, but an acceptable
   * compromise. On Arn it is also too big, but the effect is only
   * that it moves to the right, which is also an acceptable
   * compromise.
   */
  content: "▪";
  /* THIS DID NOT WORK. 
   * 
   * The font "Noto Sans Symbols" on my device Arn, a Samsung Galaxy
   * Tab S2 8.0 WiFi (2016), SM-T713, with Android 7, does not
   * contain:
   *
   *   U+25CF ‘●’ ‘black circle’
   *   U+25CB ‘○’ ‘white circle’
   *
   * So they get rendered in "SEC CJK SC Regular", in which they are
   * too big.
   *
   * So I tried providing a correct font with:
   * 
   *   font-family: "My Noto Sans Symbols2";
   * 
   * together with:
   * 
   *   @font-face {
   *     font-family: "My Noto Sans Symbols2";
   *     src: url("NotoSansSymbols2-Regular.ttf");
   *   } 
   *
   * Note the ‘2’ in the font name. But the symbols are also too big
   * in "Noto Sans Symbols2"
   *
   * There is no way to resize the bullets *and* reliable align them
   * to the baseline. There are problems if the height of the first
   * line varies. That doesn't happen often, but it happens, so I
   * don't like that. I tried for several *days* until I gave up.
   */

  /* Horizontal spacing
   * ------------------------------ */

  float: left;

  /* If you want the bullet to align with the left border, then you
   * should have:
   *
   *   this.marginLeft == -li.paddingLeft 
   */
  margin-left:  -1em; 

  /* Distance between container's left margin and left margin of
   * bullet.
   */ 
  padding-left: 0em;
                         
}

ul ul > li::before       { color: #808080; }
ul ul ul > li::before    { color: #000000; }
ul ul ul ul > li::before { color: #808080; }


/** Narrow list items.
 *
 * To get a narrower list, use `<ul class="narrow">´, e.g.:
 *
 *   <ul class="narrow">
 *     <li>One</li>
 *     <li>Two</li>
 *   </ul>
 */
ul.narrow li { 
  /* Vertical spacing 
   * ------------------------------ */

  margin-top:     0.2em;
  margin-bottom:  0.2em;
}


/** Wide list items. */
ul.wide li { 
  /* Vertical spacing 
   * ------------------------------ */

  margin-top:     2em;
  margin-bottom:  2em;
}


/* ------------------------------------------------------------
 * Definition lists
 * ------------------------------------------------------------ */
 
dl {
  margin-top:     1em;
  margin-bottom:  1em;
  margin-left:    1em;
  padding-left:   0em;
}

dt, dd {
  margin-top:     1em;
}
dd {
  margin-left:    1em;
}

/* ============================================================
 * Semantic markup
 * ============================================================ */

/** `<code>´ and class `code´.
 *
 * In Chrome and Firefox the default font size is 16pt for serif fonts
 * and 13pt for monospace fonts, which is too small. 
 *
 * The strange line
 *
 *   font-family: monospace, serif;
 *
 * sets both to 16pt, which looks right. For details, see
 *
 *    http://meyerweb.com/eric/thoughts/2010/02/12/fixed-monospace-sizing/
 */ 
c, code, *.code { 
  font-family: "Courier New", monospace, serif;
  font-size: 100%;
}

/** Definition. 
 *
 * `dfn´ marks a defined term. The surrounding `p´, `dt´/`dd´ or
 * `section´ is the definition. Do not use it on a link to a
 * definition.
 */
dfn { 
  color:      #008000;
  font-style: normal;  /* not italic */
}

.TODO {
  background-color: lightBlue;
}

/* ============================================================
 * Tables
 * ============================================================ */

th {
  text-align: left;
}

td {
  vertical-align: baseline;
}
